package {{.Name}}

import (
	"context"
	"{{.Metadata.Namespace}}/{{.Metadata.Project}}/shared"
	"{{.Metadata.Namespace}}/{{.Metadata.Project}}/shared/dto"
	{{.Name}}_dto "{{.Metadata.Namespace}}/{{.Metadata.Project}}/shared/dto/{{.Name}}"
)

type (
	Service interface {
	    {{range $function : .Functions}}
	    {{$function.Name}}(ctx context.Context, request {{.Name}}_dto.{{$function.Dto}}RequestDto) ({{.Name}}_dto.{{$function.Dto}}ResponseDto, error)
	    {{end}}
	}

	service struct {
		SharedHolder  shared.Holder
        {{if .Repository.Initialize}}
        Repository    Repository
        {{end}}
	}
)

{{if .Repository.Initialize}}
func ProvideService(holder shared.Holder, repository Repository) (Service, error) {
	return &service{holder, repository}, nil
}
{{else}}
func ProvideService(holder shared.Holder) (Service, error) {
	return &service{holder}, nil
}
{{end}}
